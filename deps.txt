[0m[[0minfo[0m] [0mLoading global plugins from /Users/work/.sbt/0.13/plugins[0m
[0m[[0minfo[0m] [0mLoading project definition from /Users/work/workspace/cds-file-upload-frontend/project[0m
[0m[[0minfo[0m] [0mSbtAutoBuildPlugin - LICENSE file exists, sbt-header will add Apache 2.0 license headers to each source file.[0m
[0m[[0minfo[0m] [0mSbtAutoBuildPlugin - adding 35 build settings[0m
[0m[[0minfo[0m] [0mSet current project to cds-file-upload-frontend (in build file:/Users/work/workspace/cds-file-upload-frontend/)[0m
[0m[[0minfo[0m] [0m*:clean = Task[Unit][0m
[0m[[0minfo[0m] [0m  +-*:clean::streams = Task[sbt.std.TaskStreams[sbt.Init$ScopedKey[_ <: Any]]][0m
[0m[[0minfo[0m] [0m  | +-*/*:streamsManager = Task[sbt.std.Streams[sbt.Init$ScopedKey[_ <: Any]]][0m
[0m[[0minfo[0m] [0m  | [0m
[0m[[0minfo[0m] [0m  +-*:cleanFilesTask = Task[scala.collection.Seq[java.io.File]][0m
[0m[[0minfo[0m] [0m  | +-*:cleanKeepFiles = Vector(/Users/work/workspace/cds-file-upload-frontend/target/.history)[0m
[0m[[0minfo[0m] [0m  | | +-*:history = Some(/Users/work/workspace/cds-file-upload-frontend/target/.history)[0m
[0m[[0minfo[0m] [0m  | |   +-*:target = target[0m
[0m[[0minfo[0m] [0m  | |     +-*:baseDirectory = /Users/work/workspace/cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m  | |       +-*:thisProject = Project(id microservice, base: /Users/work/workspace/cds-file-upload-frontend, configurations: List(universal, universal-docs, universal-sr..[0m
[0m[[0minfo[0m] [0m  | |       [0m
[0m[[0minfo[0m] [0m  | +-{.}/*:managedDirectory = lib_managed[0m
[0m[[0minfo[0m] [0m  | +-*:target = target[0m
[0m[[0minfo[0m] [0m  |   +-*:baseDirectory = /Users/work/workspace/cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m  |     +-*:thisProject = Project(id microservice, base: /Users/work/workspace/cds-file-upload-frontend, configurations: List(universal, universal-docs, universal-src, c..[0m
[0m[[0minfo[0m] [0m  |     [0m
[0m[[0minfo[0m] [0m  +-*:ivyModule = Task[sbt.IvySbt#sbt.IvySbt$Module][0m
[0m[[0minfo[0m] [0m    +-*:ivySbt = Task[sbt.IvySbt][0m
[0m[[0minfo[0m] [0m    | +-*:credentials = Task[scala.collection.Seq[sbt.Credentials]][0m
[0m[[0minfo[0m] [0m    | | +-*:credentials::streams = Task[sbt.std.TaskStreams[sbt.Init$ScopedKey[_ <: Any]]][0m
[0m[[0minfo[0m] [0m    | |   +-*/*:streamsManager = Task[sbt.std.Streams[sbt.Init$ScopedKey[_ <: Any]]][0m
[0m[[0minfo[0m] [0m    | |   [0m
[0m[[0minfo[0m] [0m    | +-*:ivyConfiguration = Task[sbt.IvyConfiguration][0m
[0m[[0minfo[0m] [0m    | | +-*/*:appConfiguration = xsbt.boot.AppConfiguration@3134b261[0m
[0m[[0minfo[0m] [0m    | | +-*:crossTarget = target/scala-2.11[0m
[0m[[0minfo[0m] [0m    | | | +-*/*:crossPaths = true[0m
[0m[[0minfo[0m] [0m    | | | +-*:pluginCrossBuild::sbtBinaryVersion = 0.13[0m
[0m[[0minfo[0m] [0m    | | | | +-*/*:pluginCrossBuild::sbtVersion = 0.13.17[0m
[0m[[0minfo[0m] [0m    | | | | [0m
[0m[[0minfo[0m] [0m    | | | +-*/*:sbtPlugin = false[0m
[0m[[0minfo[0m] [0m    | | | +-*:scalaBinaryVersion = 2.11[0m
[0m[[0minfo[0m] [0m    | | | | +-*:scalaVersion = 2.11.11[0m
[0m[[0minfo[0m] [0m    | | | | [0m
[0m[[0minfo[0m] [0m    | | | +-*:target = target[0m
[0m[[0minfo[0m] [0m    | | |   +-*:baseDirectory = /Users/work/workspace/cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m    | | |     +-*:thisProject = Project(id microservice, base: /Users/work/workspace/cds-file-upload-frontend, configurations: List(universal, universal-docs, universal-..[0m
[0m[[0minfo[0m] [0m    | | |     [0m
[0m[[0minfo[0m] [0m    | | +-*:fullResolvers = Task[scala.collection.Seq[sbt.Resolver]][0m
[0m[[0minfo[0m] [0m    | | | +-*:bootResolvers = Task[scala.Option[scala.collection.Seq[sbt.Resolver]]][0m
[0m[[0minfo[0m] [0m    | | | | +-*/*:appConfiguration = xsbt.boot.AppConfiguration@3134b261[0m
[0m[[0minfo[0m] [0m    | | | | [0m
[0m[[0minfo[0m] [0m    | | | +-*:externalResolvers = Task[scala.collection.Seq[sbt.Resolver]][0m
[0m[[0minfo[0m] [0m    | | | | +-*:appResolvers = Some(ArrayBuffer(FileRepository(local,FileConfiguration(true,None),Patterns(ivyPatterns=List(${ivy.home}/local/[organisation]/[module]/(sc..[0m
[0m[[0minfo[0m] [0m    | | | | | +-*/*:appConfiguration = xsbt.boot.AppConfiguration@3134b261[0m
[0m[[0minfo[0m] [0m    | | | | | +-*/*:useJcenter = false[0m
[0m[[0minfo[0m] [0m    | | | | | [0m
[0m[[0minfo[0m] [0m    | | | | +-*:resolvers = List(sonatype-releases: https://oss.sonatype.org/content/repositories/releases, typesafe-releases: https://repo.typesafe.com/typesafe/release..[0m
[0m[[0minfo[0m] [0m    | | | | +-*/*:useJcenter = false[0m
[0m[[0minfo[0m] [0m    | | | | [0m
[0m[[0minfo[0m] [0m    | | | +-*:overrideBuildResolvers = false[0m
[0m[[0minfo[0m] [0m    | | | | +-*/*:appConfiguration = xsbt.boot.AppConfiguration@3134b261[0m
[0m[[0minfo[0m] [0m    | | | | [0m
[0m[[0minfo[0m] [0m    | | | +-*:projectResolver = Task[sbt.Resolver][0m
[0m[[0minfo[0m] [0m    | | | | +-*:projectDescriptors = Task[scala.collection.immutable.Map[org.apache.ivy.core.module.id.ModuleRevisionId, org.apache.ivy.core.module.descriptor.ModuleDesc..[0m
[0m[[0minfo[0m] [0m    | | | |   +-*/*:buildDependencies = sbt.BuildDependencies@40b01718[0m
[0m[[0minfo[0m] [0m    | | | |   +-*:projectDescriptors::streams = Task[sbt.std.TaskStreams[sbt.Init$ScopedKey[_ <: Any]]][0m
[0m[[0minfo[0m] [0m    | | | |   | +-*/*:streamsManager = Task[sbt.std.Streams[sbt.Init$ScopedKey[_ <: Any]]][0m
[0m[[0minfo[0m] [0m    | | | |   | [0m
[0m[[0minfo[0m] [0m    | | | |   +-*/*:settingsData = Task[sbt.Settings[sbt.Scope]][0m
[0m[[0minfo[0m] [0m    | | | |   +-*:thisProjectRef = ProjectRef(file:/Users/work/workspace/cds-file-upload-frontend/,microservice)[0m
[0m[[0minfo[0m] [0m    | | | |   [0m
[0m[[0minfo[0m] [0m    | | | +-*/*:sbtPlugin = false[0m
[0m[[0minfo[0m] [0m    | | | +-*/*:sbtResolver = URLRepository(typesafe-ivy-releases,Patterns(ivyPatterns=List(https://repo.typesafe.com/typesafe/ivy-releases/[organisation]/[module]/(scal..[0m
[0m[[0minfo[0m] [0m    | | | [0m
[0m[[0minfo[0m] [0m    | | +-*:ivyConfiguration::streams = Task[sbt.std.TaskStreams[sbt.Init$ScopedKey[_ <: Any]]][0m
[0m[[0minfo[0m] [0m    | | | +-*/*:streamsManager = Task[sbt.std.Streams[sbt.Init$ScopedKey[_ <: Any]]][0m
[0m[[0minfo[0m] [0m    | | | [0m
[0m[[0minfo[0m] [0m    | | +-*:ivyPaths = IvyPath(/Users/work/workspace/cds-file-upload-frontend, Some(/Users/work/.ivy2))[0m
[0m[[0minfo[0m] [0m    | | | +-*/*:appConfiguration = xsbt.boot.AppConfiguration@3134b261[0m
[0m[[0minfo[0m] [0m    | | | +-*:baseDirectory = /Users/work/workspace/cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m    | | |   +-*:thisProject = Project(id microservice, base: /Users/work/workspace/cds-file-upload-frontend, configurations: List(universal, universal-docs, universal-sr..[0m
[0m[[0minfo[0m] [0m    | | |   [0m
[0m[[0minfo[0m] [0m    | | +-*/*:moduleConfigurations = List()[0m
[0m[[0minfo[0m] [0m    | | +-*/*:offline = false[0m
[0m[[0minfo[0m] [0m    | | +-*:otherResolvers = List(cache:publish-m2-local: /Users/work/.m2/repository)[0m
[0m[[0minfo[0m] [0m    | | | +-*:publishTo = None[0m
[0m[[0minfo[0m] [0m    | | |   +-*:repoKey = hmrc-releases-local[0m
[0m[[0minfo[0m] [0m    | | |   | +-*:makePublicallyAvailableOnBintray = false[0m
[0m[[0minfo[0m] [0m    | | |   | +-*/*:sbtPlugin = false[0m
[0m[[0minfo[0m] [0m    | | |   | [0m
[0m[[0minfo[0m] [0m    | | |   +-*/*:sbtPlugin = false[0m
[0m[[0minfo[0m] [0m    | | |   [0m
[0m[[0minfo[0m] [0m    | | +-*/*:checksums = WrappedArray(sha1, md5)[0m
[0m[[0minfo[0m] [0m    | | +-*:updateOptions = sbt.UpdateOptions@2c5ed59f[0m
[0m[[0minfo[0m] [0m    | |   +-*/*:updateOptions = sbt.UpdateOptions@2c5ed59f[0m
[0m[[0minfo[0m] [0m    | |   [0m
[0m[[0minfo[0m] [0m    | +-*:ivySbt::streams = Task[sbt.std.TaskStreams[sbt.Init$ScopedKey[_ <: Any]]][0m
[0m[[0minfo[0m] [0m    |   +-*/*:streamsManager = Task[sbt.std.Streams[sbt.Init$ScopedKey[_ <: Any]]][0m
[0m[[0minfo[0m] [0m    |   [0m
[0m[[0minfo[0m] [0m    +-*:moduleSettings = Task[sbt.ModuleSettings][0m
[0m[[0minfo[0m] [0m      +-*:allDependencies = Task[scala.collection.Seq[sbt.ModuleID]][0m
[0m[[0minfo[0m] [0m      | +-*:ivyScala = Some(IvyScala(2.11.11,2.11,List(),true,false,true,org.scala-lang))[0m
[0m[[0minfo[0m] [0m      | | +-*/*:sbtPlugin = false[0m
[0m[[0minfo[0m] [0m      | | +-*/*:scalaHome = None[0m
[0m[[0minfo[0m] [0m      | | +-*/*:scalaOrganization = org.scala-lang[0m
[0m[[0minfo[0m] [0m      | | +-*:scalaBinaryVersion = 2.11[0m
[0m[[0minfo[0m] [0m      | | +-*:scalaVersion = 2.11.11[0m
[0m[[0minfo[0m] [0m      | | [0m
[0m[[0minfo[0m] [0m      | +-*:libraryDependencies = List(org.scala-lang:scala-library:2.11.11, com.typesafe.play:twirl-api:1.3.15, com.typesafe.play:play-server:2.6.20, com.typesafe.play:..[0m
[0m[[0minfo[0m] [0m      | | +-*/*:autoScalaLibrary = true[0m
[0m[[0minfo[0m] [0m      | | +-*:crossVersion = Binary[0m
[0m[[0minfo[0m] [0m      | | | +-*/*:crossPaths = true[0m
[0m[[0minfo[0m] [0m      | | | [0m
[0m[[0minfo[0m] [0m      | | +-*/*:managedScalaInstance = true[0m
[0m[[0minfo[0m] [0m      | | +-*:playDocsModule = Some(com.typesafe.play:play-omnidoc:2.6.20:docs)[0m
[0m[[0minfo[0m] [0m      | | | +-*:playDocsName = play-omnidoc[0m
[0m[[0minfo[0m] [0m      | | |   +-*:playOmnidoc = true[0m
[0m[[0minfo[0m] [0m      | | |   [0m
[0m[[0minfo[0m] [0m      | | +-*:playPlugin = false[0m
[0m[[0minfo[0m] [0m      | | +-*/*:sbtPlugin = false[0m
[0m[[0minfo[0m] [0m      | | +-*:scalaBinaryVersion = 2.11[0m
[0m[[0minfo[0m] [0m      | | | +-*:scalaVersion = 2.11.11[0m
[0m[[0minfo[0m] [0m      | | | [0m
[0m[[0minfo[0m] [0m      | | +-*/*:scalaHome = None[0m
[0m[[0minfo[0m] [0m      | | +-*/*:scalaOrganization = org.scala-lang[0m
[0m[[0minfo[0m] [0m      | | +-*:scalaVersion = 2.11.11[0m
[0m[[0minfo[0m] [0m      | | +-*:twirlVersion = 1.3.15[0m
[0m[[0minfo[0m] [0m      | | [0m
[0m[[0minfo[0m] [0m      | +-*/*:managedScalaInstance = true[0m
[0m[[0minfo[0m] [0m      | +-*:pluginCrossBuild::sbtDependency = org.scala-sbt:sbt:0.13.17[0m
[0m[[0minfo[0m] [0m      | | +-*/*:appConfiguration = xsbt.boot.AppConfiguration@3134b261[0m
[0m[[0minfo[0m] [0m      | | +-*/*:pluginCrossBuild::sbtVersion = 0.13.17[0m
[0m[[0minfo[0m] [0m      | | +-*:scalaBinaryVersion = 2.11[0m
[0m[[0minfo[0m] [0m      | | +-*:scalaVersion = 2.11.11[0m
[0m[[0minfo[0m] [0m      | | [0m
[0m[[0minfo[0m] [0m      | +-*:projectDependencies = Task[scala.collection.Seq[sbt.ModuleID]][0m
[0m[[0minfo[0m] [0m      | | +-*/*:buildDependencies = sbt.BuildDependencies@40b01718[0m
[0m[[0minfo[0m] [0m      | | +-*/*:settingsData = Task[sbt.Settings[sbt.Scope]][0m
[0m[[0minfo[0m] [0m      | | +-*:thisProjectRef = ProjectRef(file:/Users/work/workspace/cds-file-upload-frontend/,microservice)[0m
[0m[[0minfo[0m] [0m      | | [0m
[0m[[0minfo[0m] [0m      | +-*/*:sbtPlugin = false[0m
[0m[[0minfo[0m] [0m      | +-*/*:scalaHome = None[0m
[0m[[0minfo[0m] [0m      | +-*/*:scalaOrganization = org.scala-lang[0m
[0m[[0minfo[0m] [0m      | +-*:scalaVersion = 2.11.11[0m
[0m[[0minfo[0m] [0m      | [0m
[0m[[0minfo[0m] [0m      +-*/*:conflictManager = ConflictManager(latest-revision,*,*)[0m
[0m[[0minfo[0m] [0m      +-*/*:defaultConfiguration = Some(compile)[0m
[0m[[0minfo[0m] [0m      +-*/*:dependencyOverrides = Set()[0m
[0m[[0minfo[0m] [0m      +-*/*:excludeDependencies = List()[0m
[0m[[0minfo[0m] [0m      +-*:ivyConfigurations = List(universal, universal-docs, universal-src, compile, runtime, test, provided, optional, windows, docker, linux, rpm, debian, compile-int..[0m
[0m[[0minfo[0m] [0m      | +-*/*:autoCompilerPlugins = true[0m
[0m[[0minfo[0m] [0m      | +-*/*:internalConfigurationMap = <function1>[0m
[0m[[0minfo[0m] [0m      | +-*/*:managedScalaInstance = true[0m
[0m[[0minfo[0m] [0m      | +-*/*:scalaHome = None[0m
[0m[[0minfo[0m] [0m      | +-*:thisProject = Project(id microservice, base: /Users/work/workspace/cds-file-upload-frontend, configurations: List(universal, universal-docs, universal-src, c..[0m
[0m[[0minfo[0m] [0m      | [0m
[0m[[0minfo[0m] [0m      +-*:ivyScala = Some(IvyScala(2.11.11,2.11,List(),true,false,true,org.scala-lang))[0m
[0m[[0minfo[0m] [0m      | +-*/*:sbtPlugin = false[0m
[0m[[0minfo[0m] [0m      | +-*/*:scalaHome = None[0m
[0m[[0minfo[0m] [0m      | +-*/*:scalaOrganization = org.scala-lang[0m
[0m[[0minfo[0m] [0m      | +-*:scalaBinaryVersion = 2.11[0m
[0m[[0minfo[0m] [0m      | +-*:scalaVersion = 2.11.11[0m
[0m[[0minfo[0m] [0m      | [0m
[0m[[0minfo[0m] [0m      +-*/*:ivyValidate = false[0m
[0m[[0minfo[0m] [0m      +-*/*:ivyXml = [0m
[0m[[0minfo[0m] [0m      +-*:projectId = uk.gov.hmrc:cds-file-upload-frontend:0.173.0-SNAPSHOT[0m
[0m[[0minfo[0m] [0m      | +-*/*:apiUrl = None[0m
[0m[[0minfo[0m] [0m      | +-*:artifacts = List(Artifact(cds-file-upload-frontend,zip,tgz,None,List(),None,Map()), Artifact(cds-file-upload-frontend,pom,pom,None,List(pom),None,Map()), Art..[0m
[0m[[0minfo[0m] [0m      | | +-*:makePom::artifact = Artifact(cds-file-upload-frontend,pom,pom,None,List(pom),None,Map())[0m
[0m[[0minfo[0m] [0m      | | | +-*:moduleName = cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m      | | |   +-*:normalizedName = cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m      | | |     +-*:name = cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m      | | |     [0m
[0m[[0minfo[0m] [0m      | | +-*:makePom::publishArtifact = true[0m
[0m[[0minfo[0m] [0m      | | | +-*:publishArtifact = true[0m
[0m[[0minfo[0m] [0m      | | | +-*:publishMavenStyle = true[0m
[0m[[0minfo[0m] [0m      | | |   +-*/*:sbtPlugin = false[0m
[0m[[0minfo[0m] [0m      | | |   [0m
[0m[[0minfo[0m] [0m      | | +-*:publishTgz::artifact = Artifact(cds-file-upload-frontend,zip,tgz,None,List(),None,Map())[0m
[0m[[0minfo[0m] [0m      | | +-compile:packageBin::artifact = Artifact(cds-file-upload-frontend,jar,jar,None,List(compile),None,Map())[0m
[0m[[0minfo[0m] [0m      | | | +-*/*:artifactClassifier = None[0m
[0m[[0minfo[0m] [0m      | | | +-compile:configuration = compile[0m
[0m[[0minfo[0m] [0m      | | | [0m
[0m[[0minfo[0m] [0m      | | +-compile:packageBin::publishArtifact = true[0m
[0m[[0minfo[0m] [0m      | | +-compile:packageDoc::artifact = Artifact(cds-file-upload-frontend,doc,jar,Some(javadoc),List(docs),None,Map())[0m
[0m[[0minfo[0m] [0m      | | | +-*/*:packageDoc::artifactClassifier = Some(javadoc)[0m
[0m[[0minfo[0m] [0m      | | | +-compile:configuration = compile[0m
[0m[[0minfo[0m] [0m      | | | [0m
[0m[[0minfo[0m] [0m      | | +-compile:packageDoc::publishArtifact = false[0m
[0m[[0minfo[0m] [0m      | | +-compile:packageSrc::artifact = Artifact(cds-file-upload-frontend,src,jar,Some(sources),List(sources),None,Map())[0m
[0m[[0minfo[0m] [0m      | | | +-*/*:packageSrc::artifactClassifier = Some(sources)[0m
[0m[[0minfo[0m] [0m      | | | +-compile:configuration = compile[0m
[0m[[0minfo[0m] [0m      | | | [0m
[0m[[0minfo[0m] [0m      | | +-compile:packageSrc::publishArtifact = false[0m
[0m[[0minfo[0m] [0m      | | +-test:packageBin::artifact = Artifact(cds-file-upload-frontend,jar,jar,Some(tests),List(test),None,Map())[0m
[0m[[0minfo[0m] [0m      | | | +-*/*:artifactClassifier = None[0m
[0m[[0minfo[0m] [0m      | | | +-test:configuration = test[0m
[0m[[0minfo[0m] [0m      | | | [0m
[0m[[0minfo[0m] [0m      | | +-test:packageBin::publishArtifact = false[0m
[0m[[0minfo[0m] [0m      | | +-test:packageDoc::artifact = Artifact(cds-file-upload-frontend,doc,jar,Some(tests-javadoc),List(docs),None,Map())[0m
[0m[[0minfo[0m] [0m      | | | +-*/*:packageDoc::artifactClassifier = Some(javadoc)[0m
[0m[[0minfo[0m] [0m      | | | +-test:configuration = test[0m
[0m[[0minfo[0m] [0m      | | | [0m
[0m[[0minfo[0m] [0m      | | +-test:packageDoc::publishArtifact = false[0m
[0m[[0minfo[0m] [0m      | | +-test:packageSrc::artifact = Artifact(cds-file-upload-frontend,src,jar,Some(tests-sources),List(sources),None,Map())[0m
[0m[[0minfo[0m] [0m      | | | +-*/*:packageSrc::artifactClassifier = Some(sources)[0m
[0m[[0minfo[0m] [0m      | | | +-test:configuration = test[0m
[0m[[0minfo[0m] [0m      | | | [0m
[0m[[0minfo[0m] [0m      | | +-test:packageSrc::publishArtifact = false[0m
[0m[[0minfo[0m] [0m      | | [0m
[0m[[0minfo[0m] [0m      | +-*/*:autoApiMappings = false[0m
[0m[[0minfo[0m] [0m      | +-*:moduleName = cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m      | | +-*:normalizedName = cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m      | |   +-*:name = cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m      | |   [0m
[0m[[0minfo[0m] [0m      | +-*:organization = uk.gov.hmrc[0m
[0m[[0minfo[0m] [0m      | +-*:pluginCrossBuild::sbtBinaryVersion = 0.13[0m
[0m[[0minfo[0m] [0m      | | +-*/*:pluginCrossBuild::sbtVersion = 0.13.17[0m
[0m[[0minfo[0m] [0m      | | [0m
[0m[[0minfo[0m] [0m      | +-*:scalaBinaryVersion = 2.11[0m
[0m[[0minfo[0m] [0m      | +-*:crossVersion = Binary[0m
[0m[[0minfo[0m] [0m      | +-*/*:sbtPlugin = false[0m
[0m[[0minfo[0m] [0m      | +-*:version = 0.173.0-SNAPSHOT[0m
[0m[[0minfo[0m] [0m      |   +-*:baseDirectory = /Users/work/workspace/cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m      |   | +-*:thisProject = Project(id microservice, base: /Users/work/workspace/cds-file-upload-frontend, configurations: List(universal, universal-docs, universal-sr..[0m
[0m[[0minfo[0m] [0m      |   | [0m
[0m[[0minfo[0m] [0m      |   +-*:majorVersion = 0[0m
[0m[[0minfo[0m] [0m      |   [0m
[0m[[0minfo[0m] [0m      +-*:projectInfo = ModuleInfo(cds-file-upload-frontend,cds-file-upload-frontend,Some(https://github.com/hmrc/cds-file-upload-frontend),None,List(),uk.gov.hmrc,Some(..[0m
[0m[[0minfo[0m] [0m        +-*:description = cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m        | +-*:name = cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m        | [0m
[0m[[0minfo[0m] [0m        +-*/*:developers = List()[0m
[0m[[0minfo[0m] [0m        +-*:homepage = Some(https://github.com/hmrc/cds-file-upload-frontend)[0m
[0m[[0minfo[0m] [0m        +-*/*:licenses = List()[0m
[0m[[0minfo[0m] [0m        +-*:name = cds-file-upload-frontend[0m
[0m[[0minfo[0m] [0m        +-*:organizationHomepage = Some(https://www.gov.uk/government/organisations/hm-revenue-customs)[0m
[0m[[0minfo[0m] [0m        +-*:organizationName = uk.gov.hmrc[0m
[0m[[0minfo[0m] [0m        | +-*:organization = uk.gov.hmrc[0m
[0m[[0minfo[0m] [0m        | [0m
[0m[[0minfo[0m] [0m        +-*:scmInfo = Some(ScmInfo(https://github.com/hmrc/cds-file-upload-frontend,git@github.com:hmrc/cds-file-upload-frontend.git,None))[0m
[0m[[0minfo[0m] [0m        +-*/*:startYear = None[0m
[0m[[0minfo[0m] [0m        [0m
