import uk.gov.hmrc.sbtdistributables.SbtDistributablesPlugin.publishingSettings
import uk.gov.hmrc.versioning.SbtGitVersioning.autoImport.majorVersion

name := "cds-file-upload-frontend"
majorVersion := 0

PlayKeys.devSettings := Seq("play.server.http.port" -> "6793")

lazy val microservice = (project in file("."))
  .enablePlugins(PlayScala, SbtAutoBuildPlugin, SbtDistributablesPlugin)
  .settings(commonSettings: _*)
  .settings(publishingSettings: _*)
  .settings(
    // concatenate js
    Concat.groups := Seq(
      "javascripts/cdsfileuploadfrontend-app.js" ->
        group(Seq("javascripts/cdsfileuploadfrontend.js")),
      "javascripts/analytics.min.js" ->
        group(Seq("javascripts/analytics.js"))
    ),
    // prevent removal of unused code which generates warning errors due to use of third-party libs
    uglifyCompressOptions := Seq("unused=false", "dead_code=false"),
    pipelineStages := Seq(digest),
    // below line required to force asset pipeline to operate in dev rather than only prod
    Assets / pipelineStages := Seq(concat,uglify),
    // only compress files generated by concat
    uglify / includeFilter := GlobFilter("cdsfileuploadfrontend-*.js")
  )
  .settings(silencerSettings)
  .disablePlugins(JUnitXmlReportPlugin) //Required to prevent https://github.com/scalatest/scalatest/issues/1427

lazy val silencerSettings: Seq[Setting[_]] = {
  val silencerVersion = "1.7.9"
  Seq(
    libraryDependencies ++= Seq(compilerPlugin("com.github.ghik" % "silencer-plugin" % silencerVersion cross CrossVersion.full)),
    // silence all warnings on autogenerated files
    scalacOptions += "-P:silencer:pathFilters=target/.*",
    // Make sure you only exclude warnings for the project directories, i.e. make builds reproducible
    scalacOptions += s"-P:silencer:sourceRoots=${baseDirectory.value.getCanonicalPath}"
  )
}

lazy val commonSettings = Seq(
  scalaVersion := "2.13.8",
  scalacOptions ++= scalacFlags,
  libraryDependencies ++= Dependencies.compile ++ Dependencies.test
)

lazy val scalacFlags = Seq(
  "-deprecation",         // warn about use of deprecated APIs
  "-encoding", "UTF-8",   // source files are in UTF-8
  "-feature",             // warn about misused language features
  "-unchecked",           // warn about unchecked type parameters
  "-Ywarn-numeric-widen",
  "-Xfatal-warnings",     // warnings are fatal!!
  "-Wconf:site=Module.*&cat=lint-byname-implicit:s"  // Avoid warnings from Pureconfig/Shapeless
)

