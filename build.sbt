import play.core.PlayVersion.current
import uk.gov.hmrc.SbtArtifactory
import uk.gov.hmrc.sbtdistributables.SbtDistributablesPlugin.publishingSettings
import uk.gov.hmrc.versioning.SbtGitVersioning.autoImport.majorVersion

name := "cds-file-upload-frontend"
majorVersion := 0

PlayKeys.devSettings := Seq("play.server.http.port" -> "6793")

lazy val microservice = (project in file("."))
  .enablePlugins(play.sbt.PlayScala, SbtAutoBuildPlugin, SbtGitVersioning, SbtDistributablesPlugin, SbtArtifactory)
  .settings(libraryDependencies ++= compileDependencies ++ testDependencies)
  .settings(scalaVersion := "2.12.12")
  .settings(publishingSettings: _*)
  .settings(
    // concatenate js
    Concat.groups := Seq(
      "javascripts/cdsfileuploadfrontend-app.js" ->
        group(Seq("javascripts/cdsfileuploadfrontend.js")),
      "javascripts/analytics.min.js" ->
        group(Seq("javascripts/analytics.js"))
    ),
    // prevent removal of unused code which generates warning errors due to use of third-party libs
    uglifyCompressOptions := Seq("unused=false", "dead_code=false"),
    pipelineStages := Seq(digest),
    // below line required to force asset pipeline to operate in dev rather than only prod
    pipelineStages in Assets := Seq(concat,uglify),
    // only compress files generated by concat
    includeFilter in uglify := GlobFilter("cdsfileuploadfrontend-*.js")
  )
  .settings(silencerSettings)
  .disablePlugins(JUnitXmlReportPlugin) //Required to prevent https://github.com/scalatest/scalatest/issues/1427

val httpComponentsVersion = "4.5.13"

val compileDependencies = Seq(
  "uk.gov.hmrc"               %% "bootstrap-frontend-play-28" % "5.10.0",
  "uk.gov.hmrc"               %% "govuk-template"             % "5.69.0-play-28",
  "uk.gov.hmrc"               %% "play-frontend-hmrc"         % "0.94.0-play-28",
  "uk.gov.hmrc"               %% "crypto"                     % "5.6.0",
  "uk.gov.hmrc"               %% "simple-reactivemongo"       % "8.0.0-play-28",
  "com.github.pureconfig"     %% "pureconfig"                 % "0.15.0",
  "com.typesafe.play"         %% "play-json"                  % "2.9.2",
  "org.apache.httpcomponents" %  "httpclient"                 % httpComponentsVersion,
  "org.apache.httpcomponents" %  "httpmime"                   % httpComponentsVersion
)

val testDependencies = Seq(
  "org.scalatest"          %% "scalatest"           % "3.2.9"   % "test",
  "org.jsoup"              %  "jsoup"               % "1.13.1"  % "test",
  "com.typesafe.play"      %% "play-test"           % current   % "test",
  "org.scalatestplus.play" %% "scalatestplus-play"  % "5.1.0"   % "test",
  "org.scalatestplus"      %% "mockito-3-4"         % "3.2.9.0" % "test",
  "org.scalatestplus"      %% "scalacheck-1-15"     % "3.2.9.0" % "test",
  "com.vladsch.flexmark"   %  "flexmark-all"        % "0.36.8"  % "test",
  "com.github.tomakehurst" %  "wiremock-standalone" % "2.27.2"  % "test"
)

lazy val silencerSettings: Seq[Setting[_]] = {
  val silencerVersion = "1.7.0"
  Seq(
    libraryDependencies ++= Seq(compilerPlugin("com.github.ghik" % "silencer-plugin" % silencerVersion cross CrossVersion.full)),
    // silence all warnings on autogenerated files
    scalacOptions += "-P:silencer:pathFilters=target/.*",
    // Make sure you only exclude warnings for the project directories, i.e. make builds reproducible
    scalacOptions += s"-P:silencer:sourceRoots=${baseDirectory.value.getCanonicalPath}"
  )
}
