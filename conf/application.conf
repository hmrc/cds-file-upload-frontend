# Copyright 2019 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

appName="cds-file-upload-frontend"
developerHubClientId="cds-file-upload-frontend"

play.http.router=testOnlyDoNotUseInAppConf.Routes

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.FrontendModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.FrontendFilters"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"

# Custom error handler
play.http.errorHandler = "config.ErrorHandler"

play.filters.headers.contentSecurityPolicy = "default-src 'self' 'unsafe-inline' localhost:9000 localhost:9032 localhost:9250 www.google-analytics.com www.googletagmanager.com tagmanager.google.com data: ssl.gstatic.com www.gstatic.com fonts.gstatic.com fonts.googleapis.com"
play.filters.csrf.contentType.whiteList = ["application/xml", "application/json"]

# Play Modules
# ~~~~
# Additional play modules can be added here

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# Not set here so that MDTP frontends share the same secret key in the local environment
# (see common.conf in frontend-bootstrap).
# In server environments the secret comes from app-config-common
# play.crypto.secret="sJJ6smQbqmO0b3sZQdS49DJco2C31g9PDmalWc7C9TTznhIDEKtJ7jQRPLy6hcVq"

json.encryption {
  key="eTRDaFlxN01vM3BiUHhtNw=="
  previousKeys=[]
}

microservice {
    metrics {
        graphite {
            host = localhost
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {
      auth {
        host = localhost
        port = 8500
      }

      customs-declarations {
        protocol = http
        host = localhost
        port = 6793
        batch-upload-uri = /cds-file-upload-service/test-only/batch-file-upload
        api-version = "3.0"
      }

      cds-file-upload {
        protocol = http
        host = localhost
        port = 6795
      }
    }
}

metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = false
}

auditing {
  enabled=false
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token=N/A
  host=auto
}

assets {
  version = "3.7.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

mongodb {
  uri = "mongodb://localhost:27017/"${appName}
  short-ttl = 1 hour
  long-ttl  = 28 days
  encryption-enabled = false
}

contact-frontend {
  host = "http://localhost:9250"
}

file-formats {
  max-file-size = 10485760
  approved-file-ext = ".jpeg,.jpg,.gif,.png,.pdf,.doc,.docx,.xls,.xlsx"
}
